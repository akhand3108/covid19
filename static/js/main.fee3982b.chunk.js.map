{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","img/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","coronaImage","alt","image","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.fee3982b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__20jxX\",\"card\":\"Cards_card__1LPwJ\",\"infected\":\"Cards_infected__IznCv\",\"recovered\":\"Cards_recovered__1Ayjg\",\"deaths\":\"Cards_deaths___dIDc\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}})=>{\r\n\r\n    if(!confirmed){\r\n      return 'Loading.....'\r\n    }\r\n\r\n    return(\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n\r\n      <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n          <Typography variant=\"h5\"><CountUp start={0} end={confirmed.value} duration={2.2} separator=\",\" /></Typography>\r\n          <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString} </Typography>\r\n          <Typography variant=\"body2\">Number of Active Cases of COVID-19</Typography>\r\n        </CardContent>\r\n      </Grid>\r\n\r\n      <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n          <Typography variant=\"h5\"><CountUp start={0} end={recovered.value} duration={2.2} separator=\",\" /></Typography>\r\n          <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString} </Typography>\r\n          <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n        </CardContent>\r\n      </Grid>\r\n\r\n      <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n          <Typography variant=\"h5\"><CountUp start={0} end={deaths.value} duration={2.2} separator=\",\" /></Typography>\r\n          <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString} </Typography>\r\n          <Typography variant=\"body2\">Number of deaths from COVID-19</Typography>\r\n        </CardContent>\r\n      </Grid>\r\n\r\n\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async function(country){\r\n  let changeableUrl = url;\r\n\r\n  if(country){\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try{\r\n    const {data: {confirmed ,recovered ,deaths ,lastUpdate}} = await axios.get(changeableUrl);\r\n    return {confirmed, recovered, deaths, lastUpdate}\r\n  }catch(error){\r\n\r\n  }\r\n}\r\n\r\nexport const fetchDailyData = async function(){\r\n  try {\r\n    const {data} = await axios.get(`${url}/daily`);\r\n    \r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }))\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    \r\n  }\r\n}\r\n\r\nexport const fetchCountries = async() => {\r\n  try{\r\n    const {data:{countries}} = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country)=>country.name);\r\n\r\n  }catch(error){\r\n\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    }\r\n    fetchAPI();\r\n  },[]);\r\n\r\n  const lineChart = (\r\n    dailyData.length ? (<Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [{\r\n          data: dailyData.map(({ confirmed }) => confirmed),\r\n          label: 'Infected',\r\n          borderColor: '#3333ff',\r\n          fill: true,\r\n        }, {\r\n          data: dailyData.map(({ deaths }) => deaths),\r\n          label: 'Deaths',\r\n          borderColor: 'red',\r\n          backgroundColor: 'rgba(255,0,0,0.5',\r\n          fill: true,\r\n        }],\r\n      }}\r\n    />) : null\r\n  );\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [{\r\n            label: 'People',\r\n            backgroundColor: [\r\n              'rgba(0,0,255,0.5)',\r\n              'rgba(0,255,0,0.5)',\r\n              'rgba(255,0,0,0.5)',\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value]\r\n          }]\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }} />\r\n    ) : null \r\n  )\r\n\r\nreturn (\r\n  <div className={styles.container}>\r\n    {country ? barChart : lineChart};\r\n  </div>\r\n);\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker';\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange})=>{\r\n\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    }\r\n\r\n    fetchAPI();\r\n  },[setFetchedCountries]);\r\n\r\n    return(\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value) }>\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country,i)=> <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default CountryPicker;","import React from \"react\";\r\nimport {Cards, Chart, CountryPicker} from './components';\r\n\r\nimport {fetchData} from './api';\r\nimport styles from './App.module.css';\r\nimport coronaImage from './img/image.png';\r\n\r\nclass App extends React.Component{\r\n\r\n  state = {\r\n    data : {},\r\n    country: '',\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    const fetchedData = await fetchData();\r\n    this.setState({data: fetchedData});\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    // Fetch the data\r\n    const fetchedData = await fetchData(country);\r\n    // Set The State\r\n    this.setState({data:fetchedData,country:country})\r\n  }\r\n\r\n  render(){\r\n    const {data,country} = this.state\r\n    return (\r\n      <div className={styles.container}>\r\n        <img src={coronaImage} alt=\"COVID-19\" className={styles.image}></img>\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDom.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3AtuP\",\"image\":\"App_image__3TJE_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__12Mg5\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}